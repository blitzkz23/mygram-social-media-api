definitions:
  dto.DeleteSocialMediaResponse:
    properties:
      message:
        type: string
    type: object
  dto.DeleteUserResponse:
    properties:
      message:
        type: string
    type: object
  dto.EmbeddedUser:
    properties:
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  dto.GetSocialMediaResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      social_media_url:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/dto.EmbeddedUser'
      user_id:
        type: integer
    type: object
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.LoginResponse:
    properties:
      access_token:
        type: string
    type: object
  dto.RegisterRequest:
    properties:
      age:
        type: integer
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  dto.RegisterResponse:
    properties:
      age:
        type: integer
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  dto.SocialMediaRequest:
    properties:
      name:
        type: string
      social_media_url:
        type: string
    type: object
  dto.SocialMediaResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      social_media_url:
        type: string
      user_id:
        type: integer
    type: object
  dto.UpdateSocialMediaResponse:
    properties:
      id:
        type: integer
      name:
        type: string
      social_media_url:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  dto.UpdateUserDataRequest:
    properties:
      email:
        type: string
      username:
        type: string
    type: object
  dto.UpdateUserDataResponse:
    properties:
      age:
        type: integer
      email:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /socialmedias/:
    get:
      description: Get all social medias
      operationId: get-social-medias
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetSocialMediaResponse'
      tags:
      - socialmedias
    post:
      consumes:
      - application/json
      description: Add Social Media to your account
      operationId: add-social-media
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Add social media request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.SocialMediaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SocialMediaResponse'
      tags:
      - socialmedias
  /socialmedias/{socialMediaID}:
    delete:
      description: Delete social media data
      operationId: delete-social-media
      parameters:
      - description: social media's id
        in: path
        name: socialMediaID
        required: true
        type: integer
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.DeleteSocialMediaResponse'
      tags:
      - socialmedias
    put:
      consumes:
      - application/json
      description: Edit social media data
      operationId: edit-social-media
      parameters:
      - description: social media's id
        in: path
        name: socialMediaID
        required: true
        type: integer
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Edit social media request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.SocialMediaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UpdateSocialMediaResponse'
      tags:
      - socialmedias
  /users/:
    delete:
      description: Delete user data
      operationId: delete-user
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.DeleteUserResponse'
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user data
      operationId: update-user-data
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update user request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUserDataRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UpdateUserDataResponse'
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: Login into your user account and get access token with jwt
      operationId: login-users
      parameters:
      - description: Login request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      operationId: register-users
      parameters:
      - description: Register request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.RegisterResponse'
      tags:
      - users
swagger: "2.0"
